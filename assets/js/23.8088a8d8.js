(window.webpackJsonp=window.webpackJsonp||[]).push([[23],{403:function(v,_,o){"use strict";o.r(_);var s=o(51),n=Object(s.a)({},(function(){var v=this,_=v.$createElement,o=v._self._c||_;return o("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[o("p",[v._v("数据读取以及标签等内容的代码已经全部阅读完毕，这部分思路已经理清楚，只待完成自己部分代码。")]),v._v(" "),o("p",[v._v("但该作者的代码有几分奇怪，有很多无用代码，而且部分代码逻辑与文献中的思路不同，这点比较困惑，感觉有些作者并没有完成，但还是写入了文章。这部分还需要进一步的阅读确定。")]),v._v(" "),o("p",[v._v("作者使用了三种数据集，PLAID | COOLL | WHITED，三种数据集的处理方式各有不同，COOLL 数据集还没有下载到，目前主要还是针对于 PLAID 数据集。")]),v._v(" "),o("p",[v._v("前面提到过一个比较重要的概念，zero-crossing 过零点，一个稳态电流或者电压周期至少有两个过零点，作者表明这是一个先验经验知识，因此作者的 zero-crossing 判断方法即为两个过零点确定一个稳态周期。")]),v._v(" "),o("p",[v._v("但我经过一步一步的调试，发现使用两个过零点是不合理的，对于单独设备运行，电压轨迹是近似于正弦曲线，一个周期最少需要三个过零点。作者通过是否为偶数来判断周期是不合理的，应该使用"),o("strong",[v._v("三过零点")]),v._v("确定稳态周期的起始。而且通过测试电流轨迹并不满足三过零点情形，电流非常不稳定，偶有四过零点的出现，因此选用"),o("strong",[v._v("电压轨迹判断稳态周期")]),v._v("比较合理。")]),v._v(" "),o("p",[v._v("目前想法是将 V-I 轨迹转换为图像，因此阅读别人的源码时，都比较注重寻找转换图片处的代码，一直没能找到，当时以为作者对该方面做了什么特殊处理，这周通过使用 pytorch 进行 Mnist 手写数据集分类才发觉，算法识别的其实是像素点信息，而并非最后的图像。只需要利用算法层面进行融合，将最终的图像信息传入神经网络即可。")]),v._v(" "),o("p",[v._v("相通这一点后，数据处理部分就全部理清楚了。")]),v._v(" "),o("ul",[o("li",[v._v("数据读取方式：一种是末尾读取 20 个周期数据；另一种使用 zero-crossing 挨着周期进行读取")]),v._v(" "),o("li",[v._v("PAA 降维，将数据由 "),o("code",[v._v("500 * 500")]),v._v(" 降维为 "),o("code",[v._v("48 * 48")]),v._v(" 或者再大一些")]),v._v(" "),o("li",[v._v("读取 json 文件，获取对应图像的标签信息")]),v._v(" "),o("li",[v._v("数据与标签作为 train 数据即可")])]),v._v(" "),o("p",[v._v("如果选用末尾数据读取的方式，zero-crossing 就没有使用的必要了，作者就是如此做的，虽然文章中提到过几次 zero-crossing，但最终算法中并没有使用。")])])}),[],!1,null,null,null);_.default=n.exports}}]);