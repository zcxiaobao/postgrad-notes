(window.webpackJsonp=window.webpackJsonp||[]).push([[26],{405:function(t,a,e){"use strict";e.r(a);var r=e(51),_=Object(r.a)({},(function(){var t=this,a=t.$createElement,e=t._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h2",{attrs:{id:"工作进度"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#工作进度"}},[t._v("#")]),t._v(" 工作进度")]),t._v(" "),e("h3",{attrs:{id:"特征提取的方法"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#特征提取的方法"}},[t._v("#")]),t._v(" 特征提取的方法")]),t._v(" "),e("p",[t._v("对于子数据集，结合前辈们的研究，提出一种预处理流程，基于 PLAID 和 WHITED 数据集经过 ResNet 算法进行识别都取得了超过 99% 的准确率。")]),t._v(" "),e("p",[t._v("具体流程可以分成四步:")]),t._v(" "),e("ol",[e("li",[t._v("根据经验知识，稳态电流通常至少有两个过零点，算法优化为寻找最后一个满足条件的过零点")]),t._v(" "),e("li",[t._v("以最后一个过零点为结束点，往前截取 NS 个周期数据")]),t._v(" "),e("li",[t._v("对 NS 周期对应取平均值，得到一个周期数据")]),t._v(" "),e("li",[t._v("调整稳态电流的开始点，使得开始点满足两个条件: (a) 过零点 (b) 处于上升趋势")])]),t._v(" "),e("h3",{attrs:{id:"plaid-和-whited-数据集"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#plaid-和-whited-数据集"}},[t._v("#")]),t._v(" PLAID 和 WHITED 数据集")]),t._v(" "),e("p",[t._v("本周通过广泛文献阅读，文献《Non-intrusive load monitoring by voltage–current trajectory enabled transfer learning》通过进行有功和无功功率二维平面中的负荷分布视觉分析，指明两种数据集的主要区别：PLAID 数据集具有较高的类内变化，而 WHITED 数据集具有较大的类间变化。")]),t._v(" "),e("p",[t._v("两个数据集是非常相辅相成的，PLAID 可以用来验证算法对多状态电器的识别准确率，WHITED 可以用来验证算法对多种电器的识别准确率。比较完善的两个佐证。")]),t._v(" "),e("p",[t._v("COOLL 数据集暂且有待分析。")]),t._v(" "),e("h3",{attrs:{id:"whited-数据集处理"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#whited-数据集处理"}},[t._v("#")]),t._v(" WHITED 数据集处理")]),t._v(" "),e("p",[t._v("WHITED 数据集的工频为 50HZ，采集频率 44.1 KHZ，每周期有 882 个采集点，相较于 PLAID 采集更加频繁。WHITED 中电器种类很多，但有很多类别所含电器数量较少，因此初步选取了所含电器数量较多的电器。")]),t._v(" "),e("p",[e("strong",[t._v("['CFL','DrillingMachine','Fan','FlatIron','GameConsole','HairDryer','Iron','Kettle','LEDLight',\n'LightBulb', 'Massage', 'Microwave', 'Mixer', 'Monitor', 'PowerSupply','ShoeWarmer','Shredder','SolderingIron',\n'Toaster','VacuumCleaner','WaterHeater' ]")])]),t._v(" "),e("p",[t._v("经过反复尝试，摸清楚 WHITED 数据集后，进行识别测试，取得的效果也特别好。")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("f1_score")]),t._v(" "),e("th",[t._v("matthews_corrcoef")]),t._v(" "),e("th",[t._v("zero_one_loss")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("0.9909")]),t._v(" "),e("td",[t._v("0.9903")]),t._v(" "),e("td",[t._v("0.9101")])])])]),t._v(" "),[e("img",{attrs:{src:t.$withBase("/images/20220920-WHITED-AdamResNet-pro-confusion-matrix.png"),alt:"叠加原理"}})],t._v(" "),e("h3",{attrs:{id:"ap-聚类"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#ap-聚类"}},[t._v("#")]),t._v(" AP 聚类")]),t._v(" "),e("p",[t._v("AP 聚类算法(Affinity propagation) 来源于《Clustering by Passing Messages Between Data Points》")]),t._v(" "),e("p",[t._v("这种聚类的特点在于不用确定聚类数量和质心，根据算法的计算自动进行聚类，这种特性与多状态电器感觉相性特别相符。")]),t._v(" "),e("p",[t._v("接下来想在 ResNet 网络前面加一步 AP 聚类处理，对多状态的电器进行部分状态划分。")]),t._v(" "),e("p",[t._v("感觉 AP 聚类应该有很大的研究空间，但参数非常难调，暂时还没有调出来。")]),t._v(" "),e("h3",{attrs:{id:"cooll-数据集"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#cooll-数据集"}},[t._v("#")]),t._v(" COOLL 数据集")]),t._v(" "),e("p",[t._v("通过跟 COOLL 数据集的创始人进行沟通，成功获取到了该数据集的密码。")]),t._v(" "),e("p",[t._v("该数据集跟前面两个数据集差异有点大，读了几遍数据集的参考文献，暂时还没有理清内部具体的数据存储方式。")])],2)}),[],!1,null,null,null);a.default=_.exports}}]);